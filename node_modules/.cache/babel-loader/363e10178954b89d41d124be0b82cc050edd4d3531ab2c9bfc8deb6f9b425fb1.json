{"ast":null,"code":"import api from './api';\nexport const groupService = {\n  async createGroup(groupData) {\n    try {\n      const response = await api.post('/groups', groupData);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erro ao criar grupo');\n    }\n  },\n  async getGroups(filters = {}) {\n    try {\n      const response = await api.get('/groups', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Erro ao carregar grupos');\n    }\n  },\n  async getGroupById(id) {\n    try {\n      const response = await api.get(`/groups/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Erro ao carregar grupo');\n    }\n  },\n  async joinGroup(id) {\n    try {\n      const response = await api.post(`/groups/${id}/join`);\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Erro ao entrar no grupo');\n    }\n  },\n  async leaveGroup(id) {\n    try {\n      const response = await api.post(`/groups/${id}/leave`);\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Erro ao sair do grupo');\n    }\n  },\n  async updateGroup(id, groupData) {\n    try {\n      const response = await api.put(`/groups/${id}`, groupData);\n      return response.data;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Erro ao atualizar grupo');\n    }\n  },\n  async deleteGroup(id) {\n    try {\n      const response = await api.delete(`/groups/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      throw new Error(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Erro ao deletar grupo');\n    }\n  },\n  async getUserGroups() {\n    try {\n      const response = await api.get('/groups/my-groups');\n      return response.data;\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      throw new Error(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Erro ao carregar seus grupos');\n    }\n  },\n  async searchGroups(query, filters = {}) {\n    try {\n      const response = await api.get('/groups/search', {\n        params: {\n          q: query,\n          ...filters\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      throw new Error(((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Erro ao buscar grupos');\n    }\n  }\n};","map":{"version":3,"names":["api","groupService","createGroup","groupData","response","post","data","error","_error$response","_error$response$data","Error","message","getGroups","filters","get","params","_error$response2","_error$response2$data","getGroupById","id","_error$response3","_error$response3$data","joinGroup","_error$response4","_error$response4$data","leaveGroup","_error$response5","_error$response5$data","updateGroup","put","_error$response6","_error$response6$data","deleteGroup","delete","_error$response7","_error$response7$data","getUserGroups","_error$response8","_error$response8$data","searchGroups","query","q","_error$response9","_error$response9$data"],"sources":["C:/Users/unisanta/Desktop/Nova pasta/Connexa/src/services/groupService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const groupService = {\r\n  async createGroup(groupData) {\r\n    try {\r\n      const response = await api.post('/groups', groupData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao criar grupo');\r\n    }\r\n  },\r\n\r\n  async getGroups(filters = {}) {\r\n    try {\r\n      const response = await api.get('/groups', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao carregar grupos');\r\n    }\r\n  },\r\n\r\n  async getGroupById(id) {\r\n    try {\r\n      const response = await api.get(`/groups/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao carregar grupo');\r\n    }\r\n  },\r\n\r\n  async joinGroup(id) {\r\n    try {\r\n      const response = await api.post(`/groups/${id}/join`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao entrar no grupo');\r\n    }\r\n  },\r\n\r\n  async leaveGroup(id) {\r\n    try {\r\n      const response = await api.post(`/groups/${id}/leave`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao sair do grupo');\r\n    }\r\n  },\r\n\r\n  async updateGroup(id, groupData) {\r\n    try {\r\n      const response = await api.put(`/groups/${id}`, groupData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao atualizar grupo');\r\n    }\r\n  },\r\n\r\n  async deleteGroup(id) {\r\n    try {\r\n      const response = await api.delete(`/groups/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao deletar grupo');\r\n    }\r\n  },\r\n\r\n  async getUserGroups() {\r\n    try {\r\n      const response = await api.get('/groups/my-groups');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao carregar seus grupos');\r\n    }\r\n  },\r\n\r\n  async searchGroups(query, filters = {}) {\r\n    try {\r\n      const response = await api.get('/groups/search', {\r\n        params: { q: query, ...filters }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao buscar grupos');\r\n    }\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,YAAY,GAAG;EAC1B,MAAMC,WAAWA,CAACC,SAAS,EAAE;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,SAAS,EAAEF,SAAS,CAAC;MACrD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,qBAAqB,CAAC;IACzE;EACF,CAAC;EAED,MAAMC,SAASA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC5B,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACc,GAAG,CAAC,SAAS,EAAE;QAAEC,MAAM,EAAEF;MAAQ,CAAC,CAAC;MAC9D,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAS,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAIP,KAAK,CAAC,EAAAM,gBAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBV,IAAI,cAAAW,qBAAA,uBAApBA,qBAAA,CAAsBN,OAAO,KAAI,yBAAyB,CAAC;IAC7E;EACF,CAAC;EAED,MAAMO,YAAYA,CAACC,EAAE,EAAE;IACrB,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMJ,GAAG,CAACc,GAAG,CAAC,WAAWK,EAAE,EAAE,CAAC;MAC/C,OAAOf,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAa,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAIX,KAAK,CAAC,EAAAU,gBAAA,GAAAb,KAAK,CAACH,QAAQ,cAAAgB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBd,IAAI,cAAAe,qBAAA,uBAApBA,qBAAA,CAAsBV,OAAO,KAAI,wBAAwB,CAAC;IAC5E;EACF,CAAC;EAED,MAAMW,SAASA,CAACH,EAAE,EAAE;IAClB,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,WAAWc,EAAE,OAAO,CAAC;MACrD,OAAOf,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAgB,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAId,KAAK,CAAC,EAAAa,gBAAA,GAAAhB,KAAK,CAACH,QAAQ,cAAAmB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBjB,IAAI,cAAAkB,qBAAA,uBAApBA,qBAAA,CAAsBb,OAAO,KAAI,yBAAyB,CAAC;IAC7E;EACF,CAAC;EAED,MAAMc,UAAUA,CAACN,EAAE,EAAE;IACnB,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,WAAWc,EAAE,QAAQ,CAAC;MACtD,OAAOf,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAmB,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAIjB,KAAK,CAAC,EAAAgB,gBAAA,GAAAnB,KAAK,CAACH,QAAQ,cAAAsB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBpB,IAAI,cAAAqB,qBAAA,uBAApBA,qBAAA,CAAsBhB,OAAO,KAAI,uBAAuB,CAAC;IAC3E;EACF,CAAC;EAED,MAAMiB,WAAWA,CAACT,EAAE,EAAEhB,SAAS,EAAE;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAAC6B,GAAG,CAAC,WAAWV,EAAE,EAAE,EAAEhB,SAAS,CAAC;MAC1D,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAuB,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAIrB,KAAK,CAAC,EAAAoB,gBAAA,GAAAvB,KAAK,CAACH,QAAQ,cAAA0B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBxB,IAAI,cAAAyB,qBAAA,uBAApBA,qBAAA,CAAsBpB,OAAO,KAAI,yBAAyB,CAAC;IAC7E;EACF,CAAC;EAED,MAAMqB,WAAWA,CAACb,EAAE,EAAE;IACpB,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMJ,GAAG,CAACiC,MAAM,CAAC,WAAWd,EAAE,EAAE,CAAC;MAClD,OAAOf,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA2B,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAIzB,KAAK,CAAC,EAAAwB,gBAAA,GAAA3B,KAAK,CAACH,QAAQ,cAAA8B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB5B,IAAI,cAAA6B,qBAAA,uBAApBA,qBAAA,CAAsBxB,OAAO,KAAI,uBAAuB,CAAC;IAC3E;EACF,CAAC;EAED,MAAMyB,aAAaA,CAAA,EAAG;IACpB,IAAI;MACF,MAAMhC,QAAQ,GAAG,MAAMJ,GAAG,CAACc,GAAG,CAAC,mBAAmB,CAAC;MACnD,OAAOV,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA8B,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAI5B,KAAK,CAAC,EAAA2B,gBAAA,GAAA9B,KAAK,CAACH,QAAQ,cAAAiC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB/B,IAAI,cAAAgC,qBAAA,uBAApBA,qBAAA,CAAsB3B,OAAO,KAAI,8BAA8B,CAAC;IAClF;EACF,CAAC;EAED,MAAM4B,YAAYA,CAACC,KAAK,EAAE3B,OAAO,GAAG,CAAC,CAAC,EAAE;IACtC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACc,GAAG,CAAC,gBAAgB,EAAE;QAC/CC,MAAM,EAAE;UAAE0B,CAAC,EAAED,KAAK;UAAE,GAAG3B;QAAQ;MACjC,CAAC,CAAC;MACF,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAmC,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAIjC,KAAK,CAAC,EAAAgC,gBAAA,GAAAnC,KAAK,CAACH,QAAQ,cAAAsC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBpC,IAAI,cAAAqC,qBAAA,uBAApBA,qBAAA,CAAsBhC,OAAO,KAAI,uBAAuB,CAAC;IAC3E;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}