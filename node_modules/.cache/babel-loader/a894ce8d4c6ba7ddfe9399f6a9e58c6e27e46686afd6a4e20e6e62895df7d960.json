{"ast":null,"code":"import { io } from 'socket.io-client';\nclass ChatService {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n  }\n  connect(token) {\n    if (this.socket) {\n      this.disconnect();\n    }\n    this.socket = io(process.env.REACT_APP_API_URL || 'http://localhost:3001', {\n      auth: {\n        token\n      },\n      transports: ['websocket']\n    });\n    this.socket.on('connect', () => {\n      this.isConnected = true;\n    });\n    this.socket.on('disconnect', () => {\n      this.isConnected = false;\n    });\n    return this.socket;\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n    }\n  }\n  joinGroup(groupId) {\n    if (this.socket) {\n      this.socket.emit('join_group', groupId);\n    }\n  }\n  leaveGroup(groupId) {\n    if (this.socket) {\n      this.socket.emit('leave_group', groupId);\n    }\n  }\n  sendMessage(groupId, message) {\n    if (this.socket) {\n      this.socket.emit('send_message', {\n        groupId,\n        message,\n        timestamp: new Date()\n      });\n    }\n  }\n  onMessage(callback) {\n    if (this.socket) {\n      this.socket.on('new_message', callback);\n    }\n  }\n  onUserJoined(callback) {\n    if (this.socket) {\n      this.socket.on('user_joined', callback);\n    }\n  }\n  onUserLeft(callback) {\n    if (this.socket) {\n      this.socket.on('user_left', callback);\n    }\n  }\n  onTyping(callback) {\n    if (this.socket) {\n      this.socket.on('typing', callback);\n    }\n  }\n  onStopTyping(callback) {\n    if (this.socket) {\n      this.socket.on('stop_typing', callback);\n    }\n  }\n  emitTyping(groupId) {\n    if (this.socket) {\n      this.socket.emit('typing', groupId);\n    }\n  }\n  emitStopTyping(groupId) {\n    if (this.socket) {\n      this.socket.emit('stop_typing', groupId);\n    }\n  }\n  removeAllListeners() {\n    if (this.socket) {\n      this.socket.removeAllListeners();\n    }\n  }\n}\nexport const chatService = new ChatService();","map":{"version":3,"names":["io","ChatService","constructor","socket","isConnected","connect","token","disconnect","process","env","REACT_APP_API_URL","auth","transports","on","joinGroup","groupId","emit","leaveGroup","sendMessage","message","timestamp","Date","onMessage","callback","onUserJoined","onUserLeft","onTyping","onStopTyping","emitTyping","emitStopTyping","removeAllListeners","chatService"],"sources":["C:/Users/unisanta/Desktop/Nova pasta/Connexa/src/services/chatService.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nclass ChatService {\r\n  constructor() {\r\n    this.socket = null;\r\n    this.isConnected = false;\r\n  }\r\n\r\n  connect(token) {\r\n    if (this.socket) {\r\n      this.disconnect();\r\n    }\r\n\r\n    this.socket = io(process.env.REACT_APP_API_URL || 'http://localhost:3001', {\r\n      auth: { token },\r\n      transports: ['websocket'],\r\n    });\r\n\r\n    this.socket.on('connect', () => {\r\n      this.isConnected = true;\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      this.isConnected = false;\r\n    });\r\n\r\n    return this.socket;\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n      this.isConnected = false;\r\n    }\r\n  }\r\n\r\n  joinGroup(groupId) {\r\n    if (this.socket) {\r\n      this.socket.emit('join_group', groupId);\r\n    }\r\n  }\r\n\r\n  leaveGroup(groupId) {\r\n    if (this.socket) {\r\n      this.socket.emit('leave_group', groupId);\r\n    }\r\n  }\r\n\r\n  sendMessage(groupId, message) {\r\n    if (this.socket) {\r\n      this.socket.emit('send_message', {\r\n        groupId,\r\n        message,\r\n        timestamp: new Date(),\r\n      });\r\n    }\r\n  }\r\n\r\n  onMessage(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('new_message', callback);\r\n    }\r\n  }\r\n\r\n  onUserJoined(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('user_joined', callback);\r\n    }\r\n  }\r\n\r\n  onUserLeft(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('user_left', callback);\r\n    }\r\n  }\r\n\r\n  onTyping(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('typing', callback);\r\n    }\r\n  }\r\n\r\n  onStopTyping(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('stop_typing', callback);\r\n    }\r\n  }\r\n\r\n  emitTyping(groupId) {\r\n    if (this.socket) {\r\n      this.socket.emit('typing', groupId);\r\n    }\r\n  }\r\n\r\n  emitStopTyping(groupId) {\r\n    if (this.socket) {\r\n      this.socket.emit('stop_typing', groupId);\r\n    }\r\n  }\r\n\r\n  removeAllListeners() {\r\n    if (this.socket) {\r\n      this.socket.removeAllListeners();\r\n    }\r\n  }\r\n}\r\n\r\nexport const chatService = new ChatService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}