{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unisanta\\\\Desktop\\\\Nova pasta\\\\Connexa\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const user = await authService.getProfile();\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: {\n              user,\n              token\n            }\n          });\n        } catch (error) {\n          localStorage.removeItem('token');\n          dispatch({\n            type: 'AUTH_FAILURE',\n            payload: error.message\n          });\n        }\n      } else {\n        dispatch({\n          type: 'AUTH_FAILURE',\n          payload: null\n        });\n      }\n    };\n    initAuth();\n  }, []);\n  const login = async (email, password) => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const response = await authService.login(email, password);\n      localStorage.setItem('token', response.token);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: response\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: error.message\n      });\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const response = await authService.register(userData);\n      localStorage.setItem('token', response.token);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: response\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: error.message\n      });\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const updateProfile = async profileData => {\n    try {\n      const updatedUser = await authService.updateProfile(profileData);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: updatedUser\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","isAuthenticated","isLoading","error","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","initAuth","localStorage","getItem","getProfile","removeItem","message","login","email","password","response","setItem","success","register","userData","logout","updateProfile","profileData","updatedUser","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/unisanta/Desktop/Nova pasta/Connexa/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authService } from '../services/authService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  isLoading: true,\r\n  error: null,\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'AUTH_START':\r\n      return { ...state, isLoading: true, error: null };\r\n    \r\n    case 'AUTH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    \r\n    case 'AUTH_FAILURE':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        error: action.payload,\r\n      };\r\n    \r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    \r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n      };\r\n    \r\n    case 'CLEAR_ERROR':\r\n      return { ...state, error: null };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const user = await authService.getProfile();\r\n          dispatch({\r\n            type: 'AUTH_SUCCESS',\r\n            payload: { user, token },\r\n          });\r\n        } catch (error) {\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: 'AUTH_FAILURE', payload: error.message });\r\n        }\r\n      } else {\r\n        dispatch({ type: 'AUTH_FAILURE', payload: null });\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    dispatch({ type: 'AUTH_START' });\r\n    try {\r\n      const response = await authService.login(email, password);\r\n      localStorage.setItem('token', response.token);\r\n      dispatch({\r\n        type: 'AUTH_SUCCESS',\r\n        payload: response,\r\n      });\r\n      return { success: true };\r\n    } catch (error) {\r\n      dispatch({ type: 'AUTH_FAILURE', payload: error.message });\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    dispatch({ type: 'AUTH_START' });\r\n    try {\r\n      const response = await authService.register(userData);\r\n      localStorage.setItem('token', response.token);\r\n      dispatch({\r\n        type: 'AUTH_SUCCESS',\r\n        payload: response,\r\n      });\r\n      return { success: true };\r\n    } catch (error) {\r\n      dispatch({ type: 'AUTH_FAILURE', payload: error.message });\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const updatedUser = await authService.updateProfile(profileData);\r\n      dispatch({ type: 'UPDATE_USER', payload: updatedUser });\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    clearError,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}