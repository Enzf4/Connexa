{"ast":null,"code":"export const validationRules = {\n  required: value => {\n    if (!value || typeof value === 'string' && !value.trim()) {\n      return 'Este campo é obrigatório';\n    }\n    return '';\n  },\n  email: value => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (value && !emailRegex.test(value)) {\n      return 'Digite um email válido';\n    }\n    return '';\n  },\n  institutionalEmail: value => {\n    const institutionalDomains = ['@gmail.com', '@outlook.com', '@hotmail.com', '@yahoo.com', '@estudante.ufpb.br', '@academico.ufpb.br', '@ufpb.br', '@estudante.uepb.edu.br', '@uepb.edu.br', '@estudante.ifpb.edu.br', '@ifpb.edu.br'];\n    if (value && !institutionalDomains.some(domain => value.endsWith(domain))) {\n      return 'Digite um email institucional válido';\n    }\n    return '';\n  },\n  minLength: min => value => {\n    if (value && value.length < min) {\n      return `Mínimo de ${min} caracteres`;\n    }\n    return '';\n  },\n  maxLength: max => value => {\n    if (value && value.length > max) {\n      return `Máximo de ${max} caracteres`;\n    }\n    return '';\n  },\n  password: value => {\n    if (!value) return '';\n    const hasMinLength = value.length >= 8;\n    const hasUpperCase = /[A-Z]/.test(value);\n    const hasLowerCase = /[a-z]/.test(value);\n    const hasNumbers = /\\d/.test(value);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\n    if (!hasMinLength) {\n      return 'A senha deve ter pelo menos 8 caracteres';\n    }\n    if (!hasUpperCase) {\n      return 'A senha deve conter pelo menos uma letra maiúscula';\n    }\n    if (!hasLowerCase) {\n      return 'A senha deve conter pelo menos uma letra minúscula';\n    }\n    if (!hasNumbers) {\n      return 'A senha deve conter pelo menos um número';\n    }\n    if (!hasSpecialChar) {\n      return 'A senha deve conter pelo menos um caractere especial';\n    }\n    return '';\n  },\n  confirmPassword: password => value => {\n    if (value && value !== password) {\n      return 'As senhas não coincidem';\n    }\n    return '';\n  },\n  phone: value => {\n    const phoneRegex = /^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$/;\n    if (value && !phoneRegex.test(value)) {\n      return 'Digite um telefone válido (ex: (83) 99999-9999)';\n    }\n    return '';\n  },\n  positiveNumber: value => {\n    if (value && (isNaN(value) || value <= 0)) {\n      return 'Digite um número positivo';\n    }\n    return '';\n  },\n  url: value => {\n    const urlRegex = /^https?:\\/\\/.+/;\n    if (value && !urlRegex.test(value)) {\n      return 'Digite uma URL válida (ex: https://exemplo.com)';\n    }\n    return '';\n  }\n};\nexport const getPasswordStrength = password => {\n  if (!password) return {\n    strength: 0,\n    label: '',\n    color: ''\n  };\n  let strength = 0;\n  const checks = {\n    length: password.length >= 8,\n    uppercase: /[A-Z]/.test(password),\n    lowercase: /[a-z]/.test(password),\n    numbers: /\\d/.test(password),\n    special: /[!@#$%^&*(),.?\":{}|<>]/.test(password)\n  };\n  strength = Object.values(checks).filter(Boolean).length;\n  const strengthLevels = [{\n    strength: 0,\n    label: '',\n    color: ''\n  }, {\n    strength: 1,\n    label: 'Muito fraca',\n    color: 'text-red-500'\n  }, {\n    strength: 2,\n    label: 'Fraca',\n    color: 'text-orange-500'\n  }, {\n    strength: 3,\n    label: 'Regular',\n    color: 'text-yellow-500'\n  }, {\n    strength: 4,\n    label: 'Boa',\n    color: 'text-blue-500'\n  }, {\n    strength: 5,\n    label: 'Muito forte',\n    color: 'text-green-500'\n  }];\n  return strengthLevels[strength];\n};\nexport const formatPhoneNumber = value => {\n  const numbers = value.replace(/\\D/g, '');\n  if (numbers.length <= 2) return numbers;\n  if (numbers.length <= 6) return `(${numbers.slice(0, 2)}) ${numbers.slice(2)}`;\n  if (numbers.length <= 10) {\n    return `(${numbers.slice(0, 2)}) ${numbers.slice(2, 6)}-${numbers.slice(6)}`;\n  }\n  return `(${numbers.slice(0, 2)}) ${numbers.slice(2, 7)}-${numbers.slice(7, 11)}`;\n};\nexport const formatDate = date => {\n  return new Date(date).toLocaleDateString('pt-BR', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric'\n  });\n};\nexport const formatDateTime = date => {\n  return new Date(date).toLocaleString('pt-BR', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\nexport const getRelativeTime = date => {\n  const now = new Date();\n  const diff = now - new Date(date);\n  const seconds = Math.floor(diff / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  if (days > 0) return `${days} dia${days > 1 ? 's' : ''} atrás`;\n  if (hours > 0) return `${hours} hora${hours > 1 ? 's' : ''} atrás`;\n  if (minutes > 0) return `${minutes} minuto${minutes > 1 ? 's' : ''} atrás`;\n  return 'Agora mesmo';\n};","map":{"version":3,"names":["validationRules","required","value","trim","email","emailRegex","test","institutionalEmail","institutionalDomains","some","domain","endsWith","minLength","min","length","maxLength","max","password","hasMinLength","hasUpperCase","hasLowerCase","hasNumbers","hasSpecialChar","confirmPassword","phone","phoneRegex","positiveNumber","isNaN","url","urlRegex","getPasswordStrength","strength","label","color","checks","uppercase","lowercase","numbers","special","Object","values","filter","Boolean","strengthLevels","formatPhoneNumber","replace","slice","formatDate","date","Date","toLocaleDateString","day","month","year","formatDateTime","toLocaleString","hour","minute","getRelativeTime","now","diff","seconds","Math","floor","minutes","hours","days"],"sources":["C:/Users/unisanta/Desktop/Nova pasta/Connexa/src/utils/validation.js"],"sourcesContent":["export const validationRules = {\r\n  required: (value) => {\r\n    if (!value || (typeof value === 'string' && !value.trim())) {\r\n      return 'Este campo é obrigatório';\r\n    }\r\n    return '';\r\n  },\r\n\r\n  email: (value) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (value && !emailRegex.test(value)) {\r\n      return 'Digite um email válido';\r\n    }\r\n    return '';\r\n  },\r\n\r\n  institutionalEmail: (value) => {\r\n    const institutionalDomains = [\r\n      '@gmail.com',\r\n      '@outlook.com',\r\n      '@hotmail.com',\r\n      '@yahoo.com',\r\n      '@estudante.ufpb.br',\r\n      '@academico.ufpb.br',\r\n      '@ufpb.br',\r\n      '@estudante.uepb.edu.br',\r\n      '@uepb.edu.br',\r\n      '@estudante.ifpb.edu.br',\r\n      '@ifpb.edu.br',\r\n    ];\r\n    \r\n    if (value && !institutionalDomains.some(domain => value.endsWith(domain))) {\r\n      return 'Digite um email institucional válido';\r\n    }\r\n    return '';\r\n  },\r\n\r\n  minLength: (min) => (value) => {\r\n    if (value && value.length < min) {\r\n      return `Mínimo de ${min} caracteres`;\r\n    }\r\n    return '';\r\n  },\r\n\r\n  maxLength: (max) => (value) => {\r\n    if (value && value.length > max) {\r\n      return `Máximo de ${max} caracteres`;\r\n    }\r\n    return '';\r\n  },\r\n\r\n  password: (value) => {\r\n    if (!value) return '';\r\n    \r\n    const hasMinLength = value.length >= 8;\r\n    const hasUpperCase = /[A-Z]/.test(value);\r\n    const hasLowerCase = /[a-z]/.test(value);\r\n    const hasNumbers = /\\d/.test(value);\r\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\r\n\r\n    if (!hasMinLength) {\r\n      return 'A senha deve ter pelo menos 8 caracteres';\r\n    }\r\n    if (!hasUpperCase) {\r\n      return 'A senha deve conter pelo menos uma letra maiúscula';\r\n    }\r\n    if (!hasLowerCase) {\r\n      return 'A senha deve conter pelo menos uma letra minúscula';\r\n    }\r\n    if (!hasNumbers) {\r\n      return 'A senha deve conter pelo menos um número';\r\n    }\r\n    if (!hasSpecialChar) {\r\n      return 'A senha deve conter pelo menos um caractere especial';\r\n    }\r\n    return '';\r\n  },\r\n\r\n  confirmPassword: (password) => (value) => {\r\n    if (value && value !== password) {\r\n      return 'As senhas não coincidem';\r\n    }\r\n    return '';\r\n  },\r\n\r\n  phone: (value) => {\r\n    const phoneRegex = /^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$/;\r\n    if (value && !phoneRegex.test(value)) {\r\n      return 'Digite um telefone válido (ex: (83) 99999-9999)';\r\n    }\r\n    return '';\r\n  },\r\n\r\n  positiveNumber: (value) => {\r\n    if (value && (isNaN(value) || value <= 0)) {\r\n      return 'Digite um número positivo';\r\n    }\r\n    return '';\r\n  },\r\n\r\n  url: (value) => {\r\n    const urlRegex = /^https?:\\/\\/.+/;\r\n    if (value && !urlRegex.test(value)) {\r\n      return 'Digite uma URL válida (ex: https://exemplo.com)';\r\n    }\r\n    return '';\r\n  },\r\n};\r\n\r\nexport const getPasswordStrength = (password) => {\r\n  if (!password) return { strength: 0, label: '', color: '' };\r\n\r\n  let strength = 0;\r\n  const checks = {\r\n    length: password.length >= 8,\r\n    uppercase: /[A-Z]/.test(password),\r\n    lowercase: /[a-z]/.test(password),\r\n    numbers: /\\d/.test(password),\r\n    special: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\r\n  };\r\n\r\n  strength = Object.values(checks).filter(Boolean).length;\r\n\r\n  const strengthLevels = [\r\n    { strength: 0, label: '', color: '' },\r\n    { strength: 1, label: 'Muito fraca', color: 'text-red-500' },\r\n    { strength: 2, label: 'Fraca', color: 'text-orange-500' },\r\n    { strength: 3, label: 'Regular', color: 'text-yellow-500' },\r\n    { strength: 4, label: 'Boa', color: 'text-blue-500' },\r\n    { strength: 5, label: 'Muito forte', color: 'text-green-500' },\r\n  ];\r\n\r\n  return strengthLevels[strength];\r\n};\r\n\r\nexport const formatPhoneNumber = (value) => {\r\n  const numbers = value.replace(/\\D/g, '');\r\n  if (numbers.length <= 2) return numbers;\r\n  if (numbers.length <= 6) return `(${numbers.slice(0, 2)}) ${numbers.slice(2)}`;\r\n  if (numbers.length <= 10) {\r\n    return `(${numbers.slice(0, 2)}) ${numbers.slice(2, 6)}-${numbers.slice(6)}`;\r\n  }\r\n  return `(${numbers.slice(0, 2)}) ${numbers.slice(2, 7)}-${numbers.slice(7, 11)}`;\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  return new Date(date).toLocaleDateString('pt-BR', {\r\n    day: '2-digit',\r\n    month: '2-digit',\r\n    year: 'numeric',\r\n  });\r\n};\r\n\r\nexport const formatDateTime = (date) => {\r\n  return new Date(date).toLocaleString('pt-BR', {\r\n    day: '2-digit',\r\n    month: '2-digit',\r\n    year: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  });\r\n};\r\n\r\nexport const getRelativeTime = (date) => {\r\n  const now = new Date();\r\n  const diff = now - new Date(date);\r\n  const seconds = Math.floor(diff / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n\r\n  if (days > 0) return `${days} dia${days > 1 ? 's' : ''} atrás`;\r\n  if (hours > 0) return `${hours} hora${hours > 1 ? 's' : ''} atrás`;\r\n  if (minutes > 0) return `${minutes} minuto${minutes > 1 ? 's' : ''} atrás`;\r\n  return 'Agora mesmo';\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}